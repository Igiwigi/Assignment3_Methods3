knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(
tidyverse,
ggplot2,
dplyr,
caret,
parsnip,
pROC,
ranger
)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(
tidyverse,
ggplot2,
dplyr,
caret,
parsnip,
pROC,
ranger
)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(
tidyverse,
ggplot2,
dplyr,
caret,
parsnip,
pROC,
ranger
)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(
tidyverse,
ggplot2,
dplyr,
caret,
parsnip,
pROC,
ranger
)
update.packages()
library(pacman)
p_load(
tidyverse,
ggplot2,
dplyr,
caret,
parsnip,
pROC,
ranger
)
install.packages(tidyverse, ggplot2, dplyr, caret, parsnip, pROC, ranger)
install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger"))
install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger"))
install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger"))
install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger"))
install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger"))
install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger"))
install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger"))
install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger"))
install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger"))
p_load(
tidyverse,
ggplot2,
dplyr,
caret,
parsnip,
pROC,
ranger
)
install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger", "pacman"))
install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger", "pacman"))
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
#install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger", "pacman"))
p_load(
tidyverse,
ggplot2,
dplyr,
caret,
parsnip,
pROC,
ranger
)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
#install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger", "pacman"))
p_load(
tidyverse,
ggplot2,
dplyr,
caret,
parsnip,
pROC,
ranger
)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
#install.packages(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger", "pacman"))
p_load(
tidyverse,
ggplot2,
dplyr,
caret,
parsnip,
pROC,
ranger
)
art_data <- read.table("../data/articulation_data.txt", header = T, fill = T)
p_data <- read.table("../data/pitch_data.txt", header = T, fill = T)
final <- read.table("../data/final_phonation.txt", header = T, fill = T)
#mutating diagnosis for myself
p_data <- p_data %>%
mutate(Diagnosis = if_else(Diagnosis == "control", "CTRL", "SCZ" ))
#getting rid of useless columns
art_data <- art_data %>%
select(-study, -phonationtime., -X.speakingtime.nsyll., -PauseDuration, -ID, -Study, -Trial, -Diagnosis, -ASD)
#changing the column names to what they ought be for the merge
art_data <- art_data %>%
#these are already present in the data but wrongly named
rename(Trial = X.nsyll)%>%
rename(ID = rate)%>%
rename(Diagnosis = articulation)%>%
rename(Study = X.nsyll.dur.) %>%
#adding the two new values that are missing but can be inferred from data?
mutate(articulationrate = (nsyll/phonationtime))%>%
#is this correct? *ASD (speakingtime/nsyll):* average syllable duration
#but there is no direct speakingtime unless that is speechrate?
mutate(ASD = (speechrate/nsyll)) %>%
#naming to match the naming convention
mutate(Diagnosis = if_else(Diagnosis == "control", "CTRL", "SCZ" ))
#renaming more to make them pitch-distinct and more convenient for me
p_data <- p_data %>%
rename(p_mean = mean) %>%
rename(p_sd = sd) %>%
rename(p_min = min) %>%
rename(p_max = max) %>%
rename(p_median = median) %>%
rename(p_iqr = iqr)%>%
rename(p_mad = mad) %>%
rename(p_coefvar = coefvar)
#renaming more for my own convenience
art_data <- art_data %>%
rename(full_dur = dur)
#should we choose only the relevant columns, are means, mins, maxes, etc. relevant if not listed??
p_data <- p_data %>%
select(ID, Diagnosis, Study, Trial, p_iqr, p_mad, p_coefvar, p_mean, p_sd, p_min, p_max, p_median )
art_data <- art_data %>%
select(ID, Diagnosis, Study, Trial, nsyll, npause, full_dur, phonationtime, speechrate, articulationrate, ASD)
#i assume these to be important as factor; can change it later
p_data$Diagnosis <- as.factor(p_data$Diagnosis)
p_data$Study <- as.factor(p_data$Study)
p_data$Trial <- as.factor(p_data$Trial)
p_data$ID <- as.factor(p_data$ID)
art_data$Diagnosis <- as.factor(art_data$Diagnosis)
art_data$Study <- as.factor(art_data$Study)
art_data$Trial <- as.factor(art_data$Trial)
art_data$ID <- as.factor(art_data$ID)
#hopefully correctly merged
df <- left_join(p_data, art_data, by = c("ID", "Study", "Trial", "Diagnosis"))
write.csv(df, "../data/merged_data.csv", row.names = FALSE)
#exploring the dataset
df %>%
group_by(Diagnosis) %>%
summarize(Count = n())
#ratio between diagnoses seems balanced enough, though not perfectly 50/50
df %>%
group_by(Diagnosis, Study) %>%
summarize(Count = n())
#fairly balanced though for some reason big difference between Study 3 for SCZ and CTRL (151 vs 232)
df %>%
group_by(Diagnosis, Trial) %>%
summarize(Count = n())
#appears balanced enough
df %>%
group_by(Diagnosis)%>%
summarize(across(c(speechrate, phonationtime, articulationrate, ASD, npause, nsyll), mean))
#SCZ speak less overall:
#less syllables per second = speechrate
#less speech present in recording = phonationtime (seems significant at a glance!!)
#slightly? less syllabes per second where speech is present = articulationrate
#articulate syllables much slower = ASD (seems significant at a glance!!)
#take slightly? more pauses
#speak less syllables (seems significant at a glance!!)
#doing a quick and dirty t-test to "confirm" the assumptions made at a glance (assuming non-normality so wilcox)
df %>%
group_by(Diagnosis) %>%
summarise(across(where(is.numeric), ~ wilcox.test(.x ~ as.factor(Diagnosis), data = df)$p.value)) %>%
select_if(function(x) any(x < 0.05))
#most columns are "statistically significant" as in, from different populations (this being a difference between the diagnoses) (not counting the means, which makes sense)
#namely, pitch interquartile range, pitch mean absolute deviation and pitch coefficient of variation, pitch max (do SCZ speak either high or low pitch?)
#meaning that the pitch is significantly different between the diagnoses
#number of syllables spoken overall, phonationtime (how much is spoken), the rate of speech and syllable articulation speed are also highly relevant
#also variables related to pauses are significant
#OLD
ggplot(df, aes(x = Diagnosis, y = p_max, fill = Diagnosis)) +
geom_violin(trim = T) +
labs(x = "Diagnosis", y = "Maximum pitch") +
ggtitle("Max Pitch by Diagnosis") +
theme_minimal() +
stat_summary(fun.data="mean_sdl",geom="crossbar", width=0.02 )+
scale_fill_manual(values = c("SCZ" = "gray", "CTRL" = "white"))+
geom_text(data = means, aes(label = paste("Mean:", round(mean_pitchmax, 2)), x = Diagnosis, y = mean_pitchmax), vjust = -7, hjust = -0.1, size = 4)
pacman::p_load(tidyverse, ggplot2, dplyr, caret, parsnip, pROC, ranger)
pacman::p_isinstalled(tidyverse, ggplot2, dplyr, caret, parsnip, pROC, ranger)
pacman::p_isinstalled(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger"))
pacman::p_update(tidyverse, ggplot2, dplyr, caret, parsnip, pROC, ranger)
pacman::p_update("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger")
pacman::p_update(c("tidyverse", "ggplot2", "dplyr", "caret", "parsnip", "pROC", "ranger", "pacman"))
pacman::p_load(tidyverse, ggplot2, dplyr, caret, parsnip, pROC, ranger)
